#ifndef _MTMICROFUN_H
#define _MTMICROFUN_H

#define	TTFID_2_MEM__MV_TAG				TAG
#define	TTFID_2_MEM__MV_DATANAME		DataName
#define	TTFID_2_MEM__MV_NAME			Name
#define	TTFID_2_MEM__MV_VALUE			MData
#define	TTFID_2_MEM__MV_UNIT			Unit
#define	TTFID_2_MEM__MV_HSCALE			MHScale
#define	TTFID_2_MEM__MV_LSCALE			MLScale
#define	TTFID_2_MEM__MV_DELT			MDelt
#define	TTFID_2_MEM__MV_SET				MIrv
#define	TTFID_2_MEM__MV_CONTROLMODE		MControl_type
#define	TTFID_2_MEM__MV_RCONTROLMODE	MRControl_type
#define	TTFID_2_MEM__MV_INI				MIni
#define	TTFID_2_MEM__MV_DELMAX			MDelmax
#define	TTFID_2_MEM__MV_DELMIN			MDelmin
#define	TTFID_2_MEM__MV_MAX				MMax
#define	TTFID_2_MEM__MV_MIN				MMin
#define	TTFID_2_MEM__MV_HIGH			MIrvHigh
#define	TTFID_2_MEM__MV_LOW				MIrvLow
#define	TTFID_2_MEM__MV_FMAX			MFault_max
#define	TTFID_2_MEM__MV_FMIN			MFault_min
#define	TTFID_2_MEM__MV_FHIGH			MIrvFault_high
#define	TTFID_2_MEM__MV_FLOW			MIrvFault_low
#define	TTFID_2_MEM__MV_FXSET			MFault_xirv
#define	TTFID_2_MEM__MV_FNSET			MFault_nirv
#define	TTFID_2_MEM__MV_FHSET			MFault_hirv
#define	TTFID_2_MEM__MV_FLSET		    MFault_lirv
#define	TTFID_2_MEM__MV_LPINI			MLPIni
#define	TTFID_2_MEM__MV_LPINDEX			MLPIndex
#define	TTFID_2_MEM__MV_LPOUT			MSteadOptim
#define	TTFID_2_MEM__MV_RMODE			MRCorrectMode
#define	TTFID_2_MEM__MV_SMODE			MSCorrectMode
#define	TTFID_2_MEM__MV_ERRMODE			MErrorMode
#define	TTFID_2_MEM__MV_PRIORITY		MPriority
#define	TTFID_2_MEM__MV_STATE			MInvalidate
#define	TTFID_2_MEM__MV_DIST			MDist
#define	TTFID_2_MEM__MV_SATUATION		MSatuation
#define	TTFID_2_MEM__MV_ALARM			MAlarm
#define	TTFID_2_MEM__MV_AM				MAM
#define	TTFID_2_MEM__MV_HOPEAM			MHope_AM
#define	TTFID_2_MEM__MV_R				MR
#define	TTFID_2_MEM__MV_RBROKEN			MRMax
#define	TTFID_2_MEM__MV_S				MP
#define	TTFID_2_MEM__MV_SL				MPL
#define	TTFID_2_MEM__MV_SBROKEN			MPMax
#define	TTFID_2_MEM__MV_DELR			MDelR
#define	TTFID_2_MEM__MV_DELS			MDelP
#define	TTFID_2_MEM__MV_REALR			MRealR
#define	TTFID_2_MEM__MV_REALS			MRealP
#define	TTFID_2_MEM__MV_KEYMV			MKey
#define	TTFID_2_MEM__MV_PRIV			LPPriv
#define	TTFID_2_MEM__MV_ALARMMAX		MHAlarm
#define	TTFID_2_MEM__MV_ALARMMIN		MLAlarm
#define	TTFID_2_MEM__MV_MHISTORY		MHistory
#define	TTFID_2_MEM__MV_MLASTIRV		MLastIRV
#define	TTFID_2_MEM__MV_MLASTHIGH		MLastHigh
#define	TTFID_2_MEM__MV_MLASTLOW		MLastLow
#define	TTFID_2_MEM__MV_MSETSATUATION   MSetSatuation
#define	TTFID_2_MEM__MV_MCM				MCM
#define	TTFID_2_MEM__MV_MAPARTAM		MApartAM
#define	TTFID_2_MEM__MV_IRVWRONG		MIRVWrong
#define	TTFID_2_MEM__MV_DISPLAYH		MDisplayH
#define	TTFID_2_MEM__MV_DISPLAYL		MDisplayL
#define	TTFID_2_MEM__MV_DISPLAY			MDisplay
#define	TTFID_2_MEM__MV_HOVERCOUNT		MHOverCount
#define	TTFID_2_MEM__MV_LOVERCOUNT		MLOverCount
#define	TTFID_2_MEM__MV_LASTIRV			MLastIRV
#define	TTFID_2_MEM__MV_LASTHIGH		MLastHigh
#define	TTFID_2_MEM__MV_LASTLOW			MLastLow
#define	TTFID_2_MEM__MV_HEDGE			MHEdge
#define	TTFID_2_MEM__MV_LEDGE			MLEdge
#define	TTFID_2_MEM__MV_STEADYFIELD		MSteadyField
#define	TTFID_2_MEM__MV_SAMPLE			MSample

#define	TTFID_2_MEM__CV_TAG				TAG
#define	TTFID_2_MEM__CV_DATANAME		DataName
#define	TTFID_2_MEM__CV_NAME			Name
#define	TTFID_2_MEM__CV_VALUE			CData
#define	TTFID_2_MEM__CV_UNIT			Unit
#define	TTFID_2_MEM__CV_HSCALE			CHScale
#define	TTFID_2_MEM__CV_LSCALE			CLScale
#define	TTFID_2_MEM__CV_SET		   		CSetpoint
#define	TTFID_2_MEM__CV_INI				CIni
#define	TTFID_2_MEM__CV_CONTROLMODE 	CControl_type
#define	TTFID_2_MEM__CV_RCONTROLMODE	CRControl_type
#define	TTFID_2_MEM__CV_MAX				CMax
#define	TTFID_2_MEM__CV_MIN				CMin
#define	TTFID_2_MEM__CV_HIGH			CHigh
#define	TTFID_2_MEM__CV_LOW				CLow
#define	TTFID_2_MEM__CV_FMAX			CFault_max
#define	TTFID_2_MEM__CV_FMIN			CFault_min
#define	TTFID_2_MEM__CV_FHIGH			CFault_high
#define	TTFID_2_MEM__CV_FLOW			CFault_low
#define	TTFID_2_MEM__CV_FXSET			CFault_xsetpoint
#define	TTFID_2_MEM__CV_FNSET			CFault_nsetpoint
#define	TTFID_2_MEM__CV_FHSET			CFault_hsetpoint
#define	TTFID_2_MEM__CV_FLSET			CFault_lsetpoint
#define	TTFID_2_MEM__CV_LPINI			CLPIni
#define	TTFID_2_MEM__CV_LPINDEX			CLPIndex
#define	TTFID_2_MEM__CV_LPOUT			CSteadOptim
#define	TTFID_2_MEM__CV_QMODE			CQMode
#define	TTFID_2_MEM__CV_ERRMODE			CErrorMode
#define	TTFID_2_MEM__CV_PRIORITY		CPriority
#define	TTFID_2_MEM__CV_STATE			CInvalid
#define	TTFID_2_MEM__CV_ALARM			CAlarm
#define	TTFID_2_MEM__CV_Q				CQ
#define	TTFID_2_MEM__CV_QL				CQL
#define	TTFID_2_MEM__CV_QBROKEN			CQMax
#define	TTFID_2_MEM__CV_DELQ			CDelQ
#define	TTFID_2_MEM__CV_REALQ			CRealQ
#define	TTFID_2_MEM__CV_LIMIT			CLimit
#define	TTFID_2_MEM__CV_KEYCV			CKey
#define	TTFID_2_MEM__CV_PRIV			LPPriv
#define	TTFID_2_MEM__CV_ALARMMAX		CHAlarm
#define	TTFID_2_MEM__CV_ALARMMIN		CLAlarm
#define TTFID_2_MEM__CV_DISPLAYH		CDisplayH
#define	TTFID_2_MEM__CV_DISPLAYL		CDisplayL
#define	TTFID_2_MEM__CV_DISPLAY			CDisplay
#define	TTFID_2_MEM__CV_ERROR			CError
#define	TTFID_2_MEM__CV_CM				CCM
#define	TTFID_2_MEM__CV_NOILL			CNoIll
#define	TTFID_2_MEM__CV_LPWRONG			CLPWrong
#define	TTFID_2_MEM__CV_HOVERCOUNT		CHOverCount
#define	TTFID_2_MEM__CV_LOVERCOUNT		CLOverCount
#define	TTFID_2_MEM__CV_NOLP			CNoLP
#define	TTFID_2_MEM__CV_HOVER			CHOver
#define	TTFID_2_MEM__CV_LOVER			CLOver
#define	TTFID_2_MEM__CV_LASTSET			CLastSet
#define	TTFID_2_MEM__CV_LASTHIGH		CLastHigh
#define	TTFID_2_MEM__CV_LASTLOW			CLastLow
#define	TTFID_2_MEM__CV_HEDGE			CHEdge
#define	TTFID_2_MEM__CV_LEDGE			CLEdge
#define	TTFID_2_MEM__CV_STEADYDELT		CSteadyDelt
#define	TTFID_2_MEM__CV_STEADYFIELD		CSteadyField

#define	TTFID_2_MEM__DV_TAG				TAG
#define	TTFID_2_MEM__DV_DATANAME		DataName
#define	TTFID_2_MEM__DV_NAME			Name
#define	TTFID_2_MEM__DV_VALUE			DData
#define	TTFID_2_MEM__DV_UNIT			Unit
#define	TTFID_2_MEM__DV_HSCALE			DHScale
#define	TTFID_2_MEM__DV_LSCALE			DLScale
#define	TTFID_2_MEM__DV_INI				DIni
#define	TTFID_2_MEM__DV_DELT			DDelt
#define	TTFID_2_MEM__DV_HISTORY			DHistory
#define	TTFID_2_MEM__DV_STATE			DInvalid
#define	TTFID_2_MEM__DV_PRIV			LPPriv
#define	TTFID_2_MEM__DV_DISPLAYH		DDisplayH
#define	TTFID_2_MEM__DV_DISPLAYL		DDisplayL
#define	TTFID_2_MEM__DV_DISPLAY			DDisplay
#define	TTFID_2_MEM__DV_STEADYFIELD		DSteadyField

#define TTFID_2_MEM__MDMCIRVD_FILENO	File_No
#define TTFID_2_MEM__MDMCIRVD_N			N	   			
#define TTFID_2_MEM__MDMCIRVD_P			P
#define TTFID_2_MEM__MDMCIRVD_M			M
#define TTFID_2_MEM__MDMCIRVD_p			p
#define TTFID_2_MEM__MDMCIRVD_m			m
#define TTFID_2_MEM__MDMCIRVD_nd		nd
#define TTFID_2_MEM__MDMCIRVD_alpha		Alpha
#define TTFID_2_MEM__MDMCIRVD_count		Count
#define TTFID_2_MEM__MDMCIRVD_FLAGLP	Flag_LP
#define TTFID_2_MEM__MDMCIRVD_PBROKEN	PBroken
#define TTFID_2_MEM__MDMCIRVD_QBROKEN	QBroken
#define TTFID_2_MEM__MDMCIRVD_RBROKEN	RBroken	
#define TTFID_2_MEM__MDMCIRVD_BIGCOND	Big_Cond
#define TTFID_2_MEM__MDMCIRVD_MCLASSIF	Flag_MControl
#define TTFID_2_MEM__MDMCIRVD_CCLASSIF	Flag_CControl
#define TTFID_2_MEM__MDMCIRVD_LPK		LpK
#define TTFID_2_MEM__MDMCIRVD_mG  		LPG
#define TTFID_2_MEM__MDMCIRVD_mP   		LPS
#define TTFID_2_MEM__MDMCIRVD_mQ  	 	LPQ
#define TTFID_2_MEM__MDMCIRVD_mR	  	LPR
#define TTFID_2_MEM__MDMCIRVD_mH   		LPH
#define TTFID_2_MEM__MDMCIRVD_mSR       LPSR
#define TTFID_2_MEM__MDMCIRVD_mDSR		LPDSR
#define TTFID_2_MEM__MDMCIRVD_mmul2  	LPMul2
#define TTFID_2_MEM__MDMCIRVD_mmul3  	LPMul3
#define TTFID_2_MEM__MDMCIRVD_mypredN	LPPredN
#define TTFID_2_MEM__MDMCIRVD_mAb  		LPAb
#define TTFID_2_MEM__MDMCIRVD_mA  		LPA
#define TTFID_2_MEM__MDMCIRVD_LPPRIV	LPLPPriv
#define TTFID_2_MEM__MDMCIRVD_FLAGAM		Flag_AM
#define TTFID_2_MEM__MDMCIRVD_FLAGALARM		Flag_Alarm
#define TTFID_2_MEM__MDMCIRVD_FLAGRUN		Flag_Run
#define TTFID_2_MEM__MDMCIRVD_FLAGRESP		Flag_ReSP
#define TTFID_2_MEM__MDMCIRVD_SRMODE		Flag_SRMode
#define TTFID_2_MEM__MDMCIRVD_FLAGHOPEAM	Flag_HopeAM
#define TTFID_2_MEM__MDMCIRVD_FLAGMCHANGE	Flag_MChange
#define TTFID_2_MEM__MDMCIRVD_FLAGLPCHANGE	Flag_LPChange
#define TTFID_2_MEM__MDMCIRVD_FLAGFAULT		Flag_Fault
#define TTFID_2_MEM__MDMCIRVD_HISTORY		LPHistory
#define TTFID_2_MEM__MDMCIRVD_MV  			LPMV
#define TTFID_2_MEM__MDMCIRVD_CV   			LPCV
#define TTFID_2_MEM__MDMCIRVD_DV   			LPDV
#define TTFID_2_MEM__MDMCIRVD_MAKEPARACOUNT	MakeParaCount
#define TTFID_2_MEM__MDMCIRVD_RECOUNTCOUNT	RecountCount
#define TTFID_2_MEM__MDMCIRVD_LPCOUNT		LPCount
#define TTFID_2_MEM__MDMCIRVD_FREECOUNT		Freecount
#define TTFID_2_MEM__MDMCIRVD_MPARACOUNT	MParaCount
#define TTFID_2_MEM__MDMCIRVD_MPARAMAX		MParaMax
#define TTFID_2_MEM__MDMCIRVD_NOAPART		No_Apart
#define TTFID_2_MEM__MDMCIRVD_FLAGRECOUNT	Flag_Recount
#define TTFID_2_MEM__MDMCIRVD_FLAGLPRECOUNT	Flag_LPRecount
#define TTFID_2_MEM__MDMCIRVD_FLAGWEIGHT	Flag_Weight
#define TTFID_2_MEM__MDMCIRVD_FLAGDEBUG		Flag_Debug
#define TTFID_2_MEM__MDMCIRVD_FLAGHMODE		Flag_HMode
#define TTFID_2_MEM__MDMCIRVD_FLAGAM1		Flag_AM1
#define TTFID_2_MEM__MDMCIRVD_FLAGAM2		Flag_AM2
#define TTFID_2_MEM__MDMCIRVD_FLAGAM3		Flag_AM3
#define TTFID_2_MEM__MDMCIRVD_SRERROR		SRError
#define TTFID_2_MEM__MDMCIRVD_DSRERROR		DSRError
#define TTFID_2_MEM__MDMCIRVD_STARTMODE		StartMode
#define TTFID_2_MEM__MDMCIRVD_SAMPLETIME	SampleTime
#define TTFID_2_MEM__MDMCIRVD_OUTSR			LPOutSR
#define TTFID_2_MEM__MDMCIRVD_OUTDSR		LPOutDSR
#define TTFID_2_MEM__MDMCIRVD_LPCOBJGLOBAL	LPGlobal
#define TTFID_2_MEM__MDMCIRVD_Apart			LPApart
#define TTFID_2_MEM__MDMCIRVD_YUHis			LPYUHis
#define TTFID_2_MEM__MDMCIRVD_YDHis			LPYDHis
#define TTFID_2_MEM__MDMCIRVD_INMV			LPINMV
#define TTFID_2_MEM__MDMCIRVD_INCV			LPINCV
#define TTFID_2_MEM__MDMCIRVD_INDV			LPINDV
#define TTFID_2_MEM__MDMCIRVD_LPPredU		LPPredU
#define TTFID_2_MEM__MDMCIRVD_LPPredD		LPPredD
#define TTFID_2_MEM__MDMCIRVD_MVSort		LPMVSort
#define TTFID_2_MEM__MDMCIRVD_CVSort		LPCVSort
#define TTFID_2_MEM__MDMCIRVD_ApartMV		LPApartMV
#define TTFID_2_MEM__MDMCIRVD_ApartCV		LPApartCV
#define TTFID_2_MEM__MDMCIRVD_DFILTER		DFilter
#define TTFID_2_MEM__MDMCIRVD_MAXDELAY		MaxDelay
#define TTFID_2_MEM__MDMCIRVD_N1			N1
#define TTFID_2_MEM__MDMCIRVD_N2			N2
#define TTFID_2_MEM__MDMCIRVD_INISTART		IniStart
#define TTFID_2_MEM__MDMCIRVD_ERRORCODE		ErrorCode
#define TTFID_2_MEM__MDMCIRVD_STEADY		Flag_Steady
#define TTFID_2_MEM__MDMCIRVD_CORSTEADY		Cor_Steady
#define TTFID_2_MEM__MDMCIRVD_STEADYSTEP	SteadyStep
#define TTFID_2_MEM__MDMCIRVD_LPISSTEADY	LPIsSteady
#define TTFID_2_MEM__MDMCIRVD_BADMAX		BadMax
#define TTFID_2_MEM__MDMCIRVD_ApartDV		LPApartDV

#define ONSPECREADALL(lp,id,valtype,val)    \
	{										\
		ReadGvMember((lp),(id));	\
		(val)=((##valtype)((lp)->TTFID_2_MEM__##id)); \
	}

#define ONSPECWRITEALL(lp,id,valtype,val)		\
	{									\
		((lp)->TTFID_2_MEM__##id)=((##valtype)(val)); \
		WriteGvMember((lp),(id));		\
	}

#ifdef	__MTTEST_			//only test used
#define ONSPECREADCV(lp,cvid,memid,valtype,val)    \
	{								\
		ReadCvMember((lp),(cvid),(memid));	\
		(val)=((##valtype)((lp)->TTFID_2_MEM__##memid)); \
	}

#define ONSPECWRITECV(lp,cvid,memid,valtype,val)		\
	{									\
		((lp)->TTFID_2_MEM__##memid)=((##valtype)(val)); \
		WriteCvMember((lp),(cvid),(memid));		\
	}

#define ONSPECREADDV(lp,dvid,memid,valtype,val)    \
	{								\
		ReadDvMember((lp),(dvid),(memid));	\
		(val)=((##valtype)((lp)->TTFID_2_MEM__##memid)); \
	}

#define ONSPECWRITEDV(lp,dvid,memid,valtype,val)		\
	{									\
		((lp)->TTFID_2_MEM__##memid)=((##valtype)(val)); \
		WriteDvMember((lp),(dvid),(memid));	\
	}

#define ONSPECREADMV(lp,mvid,memid,valtype,val)    \
	{								\
		ReadMvMember((lp),(mvid),(memid));	\
		(val)=((##valtype)((lp)->TTFID_2_MEM__##memid)); \
	}

#define ONSPECWRITEMV(lp,mvid,memid,valtype,val)		\
	{									\
		((lp)->TTFID_2_MEM__##memid)=((##valtype)(val)); \
		WriteMvMember((lp),(mvid),(memid));		\
	}
#define ONSPECREADALLSTRUCT(lp) { ReadGvAllMember(lp); }
#define ONSPECREADCVSTRUCT(lp,CvIndex)  { ReadCvAllMember((lp),(CvIndex)); }
#define ONSPECREADMVSTRUCT(lp,MvIndex)  { ReadMvAllMember((lp),(MvIndex)); }
#define ONSPECREADDVSTRUCT(lp,DvIndex)  { ReadDvAllMember((lp),DvIndex); }

#define ONSPECWRITEALLSTRUCT(lp) { WriteGvAllMember(lp); }
#define ONSPECWRITECVSTRUCT(lp,CvIndex)  { WriteCvAllMember((lp),(CvIndex)); }
#define ONSPECWRITEMVSTRUCT(lp,MvIndex)  { WriteMvAllMember((lp),(MvIndex)); }
#define ONSPECWRITEDVSTRUCT(lp,DvIndex)  { WriteDvAllMember((lp),(DvIndex)); }

#else
////////////////////////////////
//the following used by ttf
#define ONSPECREADCV(lp,cvid,memid,valtype,val)    \
	{								\
		LPCOBJPRIVCV _lptemp;	\
		_lptemp=COBJ_2_PRIVCV(lp);\
		ReadCvMember(_lptemp->data[cvid],(cvid),(memid));	\
		(val)=((##valtype)(_lptemp->data[cvid]->TTFID_2_MEM__##memid)); \
	}

#define ONSPECWRITECV(lp,cvid,memid,valtype,val)		\
	{									\
		LPCOBJPRIVCV _lptemp;	\
		_lptemp=COBJ_2_PRIVCV(lp);\
		(_lptemp->data[cvid]->TTFID_2_MEM__##memid)=((##valtype)(val)); \
		WriteCvMember(_lptemp->data[cvid],(cvid),(memid));		\
	}

#define ONSPECREADDV(lp,dvid,memid,valtype,val)    \
	{								\
		LPCOBJPRIVDV _lptemp;	\
		_lptemp=COBJ_2_PRIVDV(lp);\
		ReadDvMember(_lptemp->data[dvid],(dvid),(memid));	\
		(val)=((##valtype)(_lptemp->data[dvid]->TTFID_2_MEM__##memid)); \
	}

#define ONSPECWRITEDV(lp,dvid,memid,valtype,val)		\
	{									\
		LPCOBJPRIVDV _lptemp;	\
		_lptemp=COBJ_2_PRIVDV(lp);\
		(_lptemp->data[dvid]->TTFID_2_MEM__##memid)=((##valtype)(val)); \
		WriteDvMember(_lptemp->data[dvid],(dvid),(memid));	\
	}

#define ONSPECREADMV(lp,mvid,memid,valtype,val)    \
	{								\
		LPCOBJPRIVMV _lptemp;	\
		_lptemp=COBJ_2_PRIVMV(lp);\
		ReadMvMember(_lptemp->data[mvid],(mvid),(memid));	\
		(val)=((##valtype)(_lptemp->data[mvid]->TTFID_2_MEM__##memid)); \
	}

#define ONSPECWRITEMV(lp,mvid,memid,valtype,val)		\
	{									\
		LPCOBJPRIVMV _lptemp;	\
		_lptemp=COBJ_2_PRIVMV(lp);\
		(_lptemp->data[mvid]->TTFID_2_MEM__##memid)=((##valtype)(val)); \
		WriteMvMember(_lptemp->data[mvid],(mvid),(memid));		\
	}

#define ONSPECREADALLSTRUCT(lp) { ReadGvAllMember(lp); }

#define ONSPECREADCVSTRUCT(lp,CvIndex)	\
	{ ReadCvAllMember((lp->data[CvIndex]),(CvIndex));}
 
#define ONSPECREADMVSTRUCT(lp,MvIndex) \
 { ReadMvAllMember((lp->data[MvIndex]),(MvIndex)); }

#define ONSPECREADDVSTRUCT(lp,DvIndex)  \
 { ReadDvAllMember((lp->data[DvIndex]),DvIndex); }

#define ONSPECWRITEALLSTRUCT(lp) { WriteGvAllMember(lp); }

#define ONSPECWRITECVSTRUCT(lp,CvIndex)  \
 { WriteCvAllMember((lp->data[CvIndex]),(CvIndex)); }

#define ONSPECWRITEMVSTRUCT(lp,MvIndex)  \
 { WriteMvAllMember((lp->data[MvIndex]),(MvIndex)); }

#define ONSPECWRITEDVSTRUCT(lp,DvIndex)  \
 { WriteDvAllMember((lp->data[DvIndex]),(DvIndex)); }

#endif

#define PRIVALL_ALLOCANDINIT(lpPriv)	\
	{	\
		lpPriv=(LPCOBJPRIV)malloc(sizeof(CobjPriv));	\
		if(lpPriv!=NULL)	\
		{	\
		lpPriv->LPG=NULL;		\
		lpPriv->LPA=NULL;		\
		lpPriv->LPAb=NULL;		\
		lpPriv->LPMul2=NULL;		\
		lpPriv->LPMul3=NULL;		\
		lpPriv->LPSR=NULL;		\
		lpPriv->LPDSR=NULL;		\
		lpPriv->LPTempSR=NULL;		\
		lpPriv->LPTempDSR=NULL;		\
		lpPriv->LPPredN=NULL;		\
		lpPriv->LPH=NULL;		\
		lpPriv->LPMV=NULL;		\
		lpPriv->LPCV=NULL;		\
		lpPriv->LPDV=NULL;		\
		lpPriv->LPS=NULL;		\
		lpPriv->LPQ=NULL;		\
		lpPriv->LPR=NULL;		\
		lpPriv->LPLPPriv=NULL;		\
		lpPriv->LPHistory=NULL;		\
		lpPriv->LPCVSort=NULL;		\
		lpPriv->LPMVSort=NULL;		\
		lpPriv->LPDeluM=NULL;		\
		lpPriv->LPOutSR=NULL;		\
		lpPriv->LPOutDSR=NULL;		\
		lpPriv->LPGlobal=NULL;		\
		}	\
    }

#define PRIVCV_ALLOCANDINIT(_lpCobjPrivCV,_numCV)	\
	{	\
		LPVARCV _lpVarCV;	\
		_lpVarCV=(LPVARCV)malloc(_numCV*sizeof(VARCV));	\
		_lpCobjPrivCV=(_lpVarCV==NULL)?			\
				NULL:(LPCOBJPRIVCV)malloc(sizeof(CobjPrivCV));	\
		_lpCobjPrivCV->data[0]=(_lpCobjPrivCV==NULL)?		\
				NULL:_lpVarCV;		\
	}

#define PRIVMV_ALLOCANDINIT(_lpCobjPrivMV,_numMV)	\
	{	\
		LPVARMV _lpVarMV;	\
		_lpVarMV=(LPVARMV)malloc(_numMV*sizeof(VARMV));	\
		_lpCobjPrivMV=(_lpVarMV==NULL)?			\
				NULL:(LPCOBJPRIVMV)malloc(sizeof(CobjPrivMV));	\
		_lpCobjPrivMV->data[0]=(_lpCobjPrivMV==NULL)?		\
				NULL:_lpVarMV;		\
	}
#define PRIVDV_ALLOCANDINIT(_lpCobjPrivDV,_numDV)	\
	{	\
		LPVARDV _lpVarDV;	\
		_lpVarDV=(LPVARDV)malloc(_numDV*sizeof(VARDV));	\
		_lpCobjPrivDV=(_lpVarDV==NULL)?			\
				NULL:(LPCOBJPRIVDV)malloc(sizeof(CobjPrivDV));	\
		_lpCobjPrivDV->data[0]=(_lpCobjPrivDV==NULL)?		\
				NULL:_lpVarDV;		\
	}
#define FREE_PRIVALL(_lpCobjPrivAll)	\
	{		\
	_lpCobjPrivAll->LPG=NULL;	\
	_lpCobjPrivAll->LPA=NULL;	\
	_lpCobjPrivAll->LPAb=NULL;	\
	_lpCobjPrivAll->LPMul2=NULL;	\
	_lpCobjPrivAll->LPGlobal=NULL;	\
	_lpCobjPrivAll->LPOutSR=NULL;	\
	_lpCobjPrivAll->LPOutDSR=NULL;	\
	_lpCobjPrivAll->LPMul3=NULL;	\
	_lpCobjPrivAll->LPSR=NULL;	\
	_lpCobjPrivAll->LPDSR=NULL;	\
	_lpCobjPrivAll->LPTempSR=NULL;	\
	_lpCobjPrivAll->LPTempDSR=NULL;	\
	_lpCobjPrivAll->LPPredN=NULL;	\
	_lpCobjPrivAll->LPH=NULL;	\
	_lpCobjPrivAll->LPMV=NULL;	\
	_lpCobjPrivAll->LPCV=NULL;	\
	_lpCobjPrivAll->LPDV=NULL;	\
	_lpCobjPrivAll->LPS=NULL;	\
	_lpCobjPrivAll->LPQ=NULL;	\
	_lpCobjPrivAll->LPR=NULL;	\
	_lpCobjPrivAll->LPLPPriv=NULL;	\
	_lpCobjPrivAll->LPHistory=NULL;	\
	_lpCobjPrivAll->LPCVSort=NULL;	\
	_lpCobjPrivAll->LPMVSort=NULL;	\
	_lpCobjPrivAll->LPDeluM=NULL;	\
	free(_lpCobjPrivAll);	\
	}


#define FREE_PRIVCV(_lpCobjPrivCV)	\
	{		\
	free(_lpCobjPrivCV->data[0]);	\
	free(_lpCobjPrivCV);	\
	}

#define FREE_PRIVMV(_lpCobjPrivMV)	\
	{		\
	free(_lpCobjPrivMV->data[0]);	\
	free(_lpCobjPrivMV);	\
	}

#define FREE_PRIVDV(_lpCobjPrivDV)	\
	{		\
	free(_lpCobjPrivDV->data[0]);	\
	free(_lpCobjPrivDV);	\
	}

#endif
